// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Du Map
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.10
 */

package openapi




type Share struct {

	Id float32 `json:"id"`

	Celestial string `json:"celestial,omitempty"`

	TileId float32 `json:"tileId,omitempty"`

	User string `json:"user"`

	TargetUser string `json:"targetUser,omitempty"`

	TargetGroup string `json:"targetGroup,omitempty"`

	WithContent bool `json:"withContent"`

	OwnShare bool `json:"ownShare"`

	Pending bool `json:"pending"`
}

// AssertShareRequired checks if the required fields are not zero-ed
func AssertShareRequired(obj Share) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"user": obj.User,
		"withContent": obj.WithContent,
		"ownShare": obj.OwnShare,
		"pending": obj.Pending,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertShareConstraints checks if the values respects the defined constraints
func AssertShareConstraints(obj Share) error {
	return nil
}
